{
  "version": 3,
  "sources": ["../../app/scripts/common/model/popup-component.js", "../../app/scripts/common/model/popup-address.js", "../../app/scripts/account-address.js"],
  "sourcesContent": ["export class PopupComponent extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.getElementsByClassName(\"js-popup-close\").addEvents(\"click\", this.close.bind(this));\r\n  }\r\n\r\n  close() {\r\n    this.removeClass(\"is-open\");\r\n    AT.enableScroll();\r\n  }\r\n\r\n  open() {\r\n    this.addClass(\"is-open\");\r\n    AT.disableScroll();\r\n  }\r\n}\r\n", "import { PopupComponent } from \".\";\r\n\r\nexport class PopupAddress extends PopupComponent {\r\n  constructor() {\r\n    super();\r\n\r\n    this.elms = {\r\n      form: this.querySelector(\"form\"),\r\n      firstName: this.querySelector(\"input[name='address[first_name]']\"),\r\n      lastName: this.querySelector(\"input[name='address[last_name]']\"),\r\n      company: this.querySelector(\"input[name='address[company]']\"),\r\n      address1: this.querySelector(\"input[name='address[address1]']\"),\r\n      address2: this.querySelector(\"input[name='address[address2]']\"),\r\n      city: this.querySelector(\"input[name='address[city]']\"),\r\n      country: this.querySelector(\"select[name='address[country]']\"),\r\n      province: this.querySelector(\"select[name='address[province]']\"),\r\n      zip: this.querySelector(\"input[name='address[zip]']\"),\r\n      phone: this.querySelector(\"input[name='address[phone]']\"),\r\n      defaultCheckbox: this.querySelector(\"input[name='address[default]']\"),\r\n      method: this.querySelector(\"input[name='_method']\"),\r\n      heading: this.querySelector(\".popup-component_box_header\"),\r\n      submitButton: this.querySelector(\"button[type='submit']\"),\r\n    };\r\n    this.settings = {\r\n      action: this.elms.form.getAttribute(\"action\"),\r\n    };\r\n\r\n    this.onCountryChange();\r\n  }\r\n  open(action, data) {\r\n    this.resetForm();\r\n    action == \"edit\" && this.setForm(data);\r\n    console.log(data);\r\n    this.addClass(\"is-open\");\r\n    AT.disableScroll();\r\n  }\r\n\r\n  resetForm() {\r\n    let {\r\n      form,\r\n      firstName,\r\n      lastName,\r\n      company,\r\n      address1,\r\n      address2,\r\n      city,\r\n      country,\r\n      province,\r\n      zip,\r\n      phone,\r\n      defaultCheckbox,\r\n      method,\r\n      heading,\r\n      submitButton,\r\n    } = this.elms;\r\n    heading.innerHTML = theme.strings.address.addTitle;\r\n    submitButton.innerHTML = theme.strings.address.add;\r\n    firstName.value = \"\";\r\n    lastName.value = \"\";\r\n    company.value = \"\";\r\n    address1.value = \"\";\r\n    address2.value = \"\";\r\n    city.value = \"\";\r\n    zip.value = \"\";\r\n    phone.value = \"\";\r\n    province.closest(\"tr\").addClass(\"d-none\");\r\n    province.value = \"\";\r\n    country.value = country.options[0].value;\r\n    defaultCheckbox.checked = false;\r\n    method.value = \"\";\r\n    form.setAttribute(\"action\", this.settings.action);\r\n  }\r\n\r\n  setForm(data) {\r\n    let {\r\n      form,\r\n      firstName,\r\n      lastName,\r\n      company,\r\n      address1,\r\n      address2,\r\n      city,\r\n      country,\r\n      province,\r\n      zip,\r\n      phone,\r\n      defaultCheckbox,\r\n      method,\r\n      heading,\r\n      submitButton,\r\n    } = this.elms;\r\n    heading.innerHTML = theme.strings.address.editTitle;\r\n    submitButton.innerHTML = theme.strings.address.update;\r\n    firstName.value = data.first_name;\r\n    lastName.value = data.last_name;\r\n    company.value = data.company;\r\n    address1.value = data.address1;\r\n    address2.value = data.address2;\r\n    city.value = data.city;\r\n    zip.value = data.zip;\r\n    phone.value = data.phone;\r\n    form.setAttribute(\"action\", `${this.settings.action}/${data.id}`);\r\n    province.closest(\"tr\").addClass(\"d-none\");\r\n    country.value = data.country;\r\n    method.value = \"put\";\r\n    defaultCheckbox.checked = data.default;\r\n    country.dispatchEvent(new Event(\"change\"));\r\n    province.value = data.province || \"\";\r\n  }\r\n\r\n  onCountryChange() {\r\n    let { country, province } = this.elms;\r\n\r\n    country.addEvent(\"change\", function () {\r\n      let provinceList = JSON.parse(country.options[country.selectedIndex].dataset.provinces) || [];\r\n      if (provinceList.length) {\r\n        province.innerHTML = \"\";\r\n        provinceList.forEach((provinceItem) => {\r\n          let option = document.createElement(\"option\");\r\n          option.innerHTML = provinceItem[0];\r\n          option.value = provinceItem[0];\r\n          province.append(option);\r\n        });\r\n        province.closest(\"tr\").removeClass(\"d-none\");\r\n      } else {\r\n        province.closest(\"tr\").addClass(\"d-none\");\r\n      }\r\n    });\r\n  }\r\n}\r\n", "import { PopupAddress } from \"./common/model/popup-address\";\r\n\r\n(() => {\r\n  register(\"account-address\", {\r\n    onLoad() {\r\n      this.elms = {\r\n        popupAddress: this.container.querySelector(\"#popup-address\"),\r\n        addButton: this.container.querySelector(\".js-btn-add-new\"),\r\n        editButtons: this.container.querySelectorAll(\".js-btn-edit\"),\r\n      };\r\n      customElements.define(\"popup-address\", PopupAddress);\r\n      this.initEvent();\r\n    },\r\n    initEvent() {\r\n      let { addButton, editButtons, popupAddress } = this.elms;\r\n\r\n      addButton.addEvent(\"click\", () => {\r\n        popupAddress.open(\"add\");\r\n      });\r\n\r\n      editButtons.addEvents(\"click\", function () {\r\n        let data = JSON.parse(this.dataset.json);\r\n        console.log(data);\r\n        popupAddress.open(\"edit\", data);\r\n      });\r\n    },\r\n  });\r\n  load(\"account-address\");\r\n})();\r\n"],
  "mappings": "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",
  "names": []
}
