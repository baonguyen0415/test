{
  "version": 3,
  "sources": ["../../app/scripts/common/model/infinite-button.js", "../../app/scripts/blog-page.js"],
  "sourcesContent": ["export class InfiniteButton extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.isLoading = false;\r\n    this.initEventHandler();\r\n  }\r\n  initEventHandler() {\r\n    const handler = (cb) => {\r\n      let self = this;\r\n      return function(e) {\r\n        let rect = self.getBoundingClientRect();\r\n        let settings = self.getInfo();\r\n        if (!self.isLoading && settings.nextPage && window.pageYOffset + 1e3 >= rect.y) {\r\n          cb();\r\n        }\r\n      };\r\n    };\r\n    Object.assign(this, {\r\n      unobserver: () => {\r\n        window.removeEvent(\"scroll\", this.scrollHandler);\r\n        this.removeEvent(\"click\", this.scrollHandler);\r\n      },\r\n      observer(cb) {\r\n        this.scrollHandler = handler(cb);\r\n        this.unobserver();\r\n        window.addEvent(\"scroll\", this.scrollHandler);\r\n        this.addEvent(\"click\", this.scrollHandler);\r\n      }\r\n    });\r\n  }\r\n  reset() {\r\n    this.setAttribute(\"data-current-page\", 1);\r\n    this.setAttribute(\"data-next-page\", 1);\r\n  }\r\n  setStatus(status) {\r\n    switch (status) {\r\n      case \"hide\":\r\n        this.addClass(\"d-none\");\r\n        break;\r\n      case \"show\":\r\n        this.removeClass(\"d-none\");\r\n        break;\r\n      case \"loading\":\r\n        this.setAttribute(\"loading\", \"\");\r\n        this.isLoading = true;\r\n        break;\r\n      case \"loaded\":\r\n        this.removeAttribute(\"loading\");\r\n        this.isLoading = false;\r\n        break;\r\n      case \"reset\":\r\n        this.setAttribute(\"data-current-page\", 1);\r\n        this.setAttribute(\"data-next-page\", 1);\r\n        break;\r\n    }\r\n  }\r\n  setInfo({ currentPage, nextPage }) {\r\n    this.setAttribute(\"data-current-page\", currentPage);\r\n    this.setAttribute(\"data-next-page\", nextPage);\r\n  }\r\n  getInfo() {\r\n    return {\r\n      currentPage: +this.getAttribute(\"data-current-page\"),\r\n      nextPage: +this.getAttribute(\"data-next-page\")\r\n    };\r\n  }\r\n};", "import { InfiniteButton } from \"./common/model/infinite-button\";\r\n\r\nlet BlogTemplate = {\r\n  onLoad() {\r\n    this.filterData = [];\r\n    this.elms = {\r\n      infiniteButton: this.container.querySelector(\"infinite-button\"),\r\n      blogGridContainer: this.container.querySelector(\"#main-blog-grid\"),\r\n      tagElements: this.container.querySelectorAll(\".js-tag\"),\r\n      paginationContainer: document.getElementById(\"pagination-container\"),\r\n    };\r\n    this.settings = JSON.parse(this.container.querySelector(\"script[data-blog-settings]\").innerHTML);\r\n    this.filterData = {};\r\n    this.canceLoadArticles = false;\r\n    if (this.settings.paginationType == \"infinite\") {\r\n      this.loadArticles().then(() => this.initInfiniteButton());\r\n    }\r\n    this.initFilter();\r\n  },\r\n  initFilter() {\r\n    let { tagElements } = this.elms;\r\n    let parent = tagElements[0].closest(\".widget-tags\");\r\n    tagElements.forEach((tagItem) => {\r\n      tagItem.addEvent(\"click\", (e) => {\r\n        e.preventDefault();\r\n        let { tagHandle } = tagItem.dataset;\r\n        let isActived = false;\r\n        if (tagItem.hasClass(\"active\")) {\r\n          isActived = true;\r\n          this.settings.currentTags = this.settings.currentTags.filter((tag) => tag != tagHandle);\r\n        } else {\r\n          this.settings.currentTags.push(tagHandle);\r\n        }\r\n        this.canceLoadArticles = true;\r\n        parent.addClass(\"pending\");\r\n        this.updatePage(\"filter\")\r\n          .then(() => {\r\n            isActived ? tagItem.removeClass(\"active\") : tagItem.addClass(\"active\");\r\n          })\r\n          .catch((error) => {\r\n            console.warn(\"Tag filter has an error:\");\r\n            console.warn(error);\r\n          })\r\n          .finally(() => {\r\n            this.canceLoadArticles = false;\r\n            parent.removeClass(\"pending\");\r\n          });\r\n      });\r\n    });\r\n  },\r\n  initInfiniteButton() {\r\n    let { infiniteButton, paginationContainer } = this.elms;\r\n    customElements.define(\"infinite-button\", InfiniteButton);\r\n    let { nextPage } = infiniteButton.getInfo();\r\n    if (nextPage) {\r\n      infiniteButton.observer(this.onInfiniteHandler.bind(this));\r\n      paginationContainer.removeClass(\"d-none\");\r\n    }\r\n  },\r\n  onInfiniteHandler() {\r\n    let { infiniteButton } = this.elms;\r\n    let { currentPage, nextPage } = infiniteButton.getInfo();\r\n    if (nextPage) {\r\n      currentPage++;\r\n      let searchParams = this.getSearchParams(currentPage);\r\n      infiniteButton.setStatus(\"loading\");\r\n      this.updatePage(\"infinite\", searchParams).then(() => infiniteButton.setStatus(\"loaded\"));\r\n    }\r\n  },\r\n  async loadArticles() {\r\n    let currentPage = AT.getParameterByName(\"page\") || 1;\r\n    for (let i = 1; i <= currentPage; i++) {\r\n      let searchParams = this.getSearchParams(i);\r\n      if (this.canceLoadArticles) {\r\n        this.canceLoadArticles = false;\r\n        break;\r\n      }\r\n      await this.updatePage(\"load-articles\", searchParams);\r\n    }\r\n  },\r\n  async updatePage(action, searchParams) {\r\n    !searchParams && (searchParams = this.getSearchParams());\r\n    let url = `${this.settings.url}${searchParams}`;\r\n    return new Promise((res, rej) => {\r\n      try {\r\n        AT.queue.add(this.getPage(url), (html) => {\r\n          this.renderPage(action, html);\r\n          this.updateURLHash(url);\r\n          res(1);\r\n        });\r\n      } catch (error) {\r\n        rej(error);\r\n      }\r\n    });\r\n  },\r\n  getPage(url) {\r\n    return this.filterData[url]\r\n      ? this.filterData[url].cloneNode(true)\r\n      : fetch(url, { dataType: \"text\" }).then((content) => {\r\n          let div = document.createElement(\"div\");\r\n          div.innerHTML = content;\r\n          this.filterData[url] = div.cloneNode(true);\r\n          return div;\r\n        });\r\n  },\r\n  async renderPage(action, html) {\r\n    let { blogGridContainer, paginationContainer, infiniteButton } = this.elms;\r\n    let articles = [...html.querySelectorAll(\"#main-blog-grid article\")];\r\n    switch (action) {\r\n      case \"filter\":\r\n        await AT.scrollTo(\r\n          blogGridContainer,\r\n          1e3,\r\n          parseFloat(getComputedStyle(document.documentElement).getPropertyValue(\"--header-height\")) + 40,\r\n        ).then(() => {\r\n          blogGridContainer.innerHTML = html.querySelector(\"#main-blog-grid\").innerHTML;\r\n          if (this.settings.paginationType != \"infinite\") {\r\n            paginationContainer.innerHTML = html\r\n              .querySelector(\"#pagination-container\")\r\n              .innerHTML.replace(/&view=ajax/g, \"\")\r\n              .replace(/&amp;view=ajax/g, \"\");\r\n          }\r\n        });\r\n        break;\r\n      case \"infinite\":\r\n      case \"load-articles\":\r\n        articles.forEach((article) => blogGridContainer.append(article));\r\n        break;\r\n    }\r\n    if (this.settings.paginationType == \"infinite\" && action != \"load-articles\") {\r\n      let { currentPage, nextPage } = html.querySelector(\"infinite-button\").dataset;\r\n      if (+nextPage) {\r\n        paginationContainer.removeClass(\"d-none\");\r\n        infiniteButton.observer(this.onInfiniteHandler.bind(this));\r\n      } else {\r\n        paginationContainer.addClass(\"d-none\");\r\n        infiniteButton.unobserver();\r\n      }\r\n      infiniteButton.setInfo({ currentPage, nextPage });\r\n    }\r\n  },\r\n  getSearchParams(page) {\r\n    return [\r\n      this.settings.currentTags.length ? `/tagged/${this.settings.currentTags.join(\"+\")}` : \"\",\r\n      [`page=${page || 1}`, \"view=ajax\"].join(\"&\"),\r\n    ].join(\"?\");\r\n  },\r\n  updateURLHash(url) {\r\n    history.pushState({}, \"\", url.replace(\"&view=ajax\", \"\"));\r\n  },\r\n};\r\n\r\nregister(\"blog-template\", BlogTemplate);\r\nload(\"blog-template\");\r\n"],
  "mappings": "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",
  "names": []
}
