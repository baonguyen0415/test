<link rel="stylesheet" href="{{'left-column.css' | asset_url}}" media="all">
<link rel="stylesheet" href="{{'section-featured-collection-left-column.css' | asset_url}}" media="print" onload="this.media='all'">

{%- liquid
  assign bg_class = ''
  assign limit = section.settings.limit
  assign collection = collections[section.settings.collection]
  assign sectionID  = '#section-' | append: section.id
  assign items_resp = section.settings.items_resp
  assign items_spacing = section.settings.items_spacing
  assign heading_style_block = section.blocks | where: 'type' , 'heading-style' | first

  assign layout = section.settings.layout
  if layout == 'boxed'
    assign layout_class = 'container'
  else
    assign layout_class = 'container-fluid'
  endif

  if limit == 0
    assign limit = collection.all_products_count
  endif

  if items_spacing
  else
    assign items_spacing_row = 'no-padding'
  endif
-%}

{%- capture section_heading -%}
  {%- include 'snippet-heading' type:'render-html' config: section.settings -%}
{%- endcapture -%}

{%- capture gridClass -%}{%- render 'set-item-per-row', value: items_resp -%}{%- endcapture -%}

<div class="section-featured-collection-left-column" id="section-{{section.id}}" data-section-id="{{section.id}}">
  <div class="{% if template == 'index' %}{{ layout_class }}{% endif %}">
    <div class="section-wrapper {{items_spacing_row}}">

      <div class="section-body">
        <div class="left-column-container d-none d-lg-block">
          <div class="sb-widget">
            <div class="sb-menu">
              {%- assign menu = section.settings.menu_item -%}
              {%- assign _menu_title = section.settings.left_sidebar_heading -%}

              {%- unless menu == blank -%}
                {%- unless _menu_title == blank -%}<h5 class="sb-title">{{ _menu_title }}</h5>{%- endunless -%}
                <div class="sb-menu-inner">
                  <ul class="sb-menu-list">
                    {%- for _menu_link in linklists[menu].links -%}
                      {%- assign submenu = _menu_link.title | handleize -%}

                      {%- if linklists[submenu].links.size > 0 -%}
                        <li class="item menu-item-dropdown">
                          <div class="dropdown-inner">
                            <a href="{{ _menu_link.url }}"><span>{{ _menu_link.title }}</span></a>
                            <span class="expand mi-expand">{%- render 'svg', type: 'angle-right' -%}</span>
                          </div>
                          <ul class="child-list">
                            {%- for l in linklists[submenu].links -%}
                              <li class="child-item"><a href="{{ l.url }}"><span>{{ l.title }}</span></a></li>
                            {%- endfor -%}
                          </ul>
                        </li>
                      {%- else -%}
                        <li class="item">
                          <a href="{{ _menu_link.url }}">
                            <span>{{ _menu_link.title }}</span>
                          </a>
                        </li>
                      {%- endif -%}

                    {%- endfor -%}
                  </ul>
                </div>

                <script type="text/javascript">
                  let _elements = document.querySelectorAll(".mi-expand");
                  _elements.forEach((e) => {
                      e.addEvent("click", () => {
                        if(e.closest(".menu-item-dropdown").classList.contains("active")){
                          e.closest(".menu-item-dropdown").classList.remove('active');
                        }
                        else{
                          e.closest(".menu-item-dropdown").classList.add('active');
                        }
                      });
                  }); 
                </script>
              {%- endunless -%}

            </div>
          </div>
    
          {%- unless section.settings.image == blank -%}
            {%- assign _image = section.settings.image -%}
            {%- assign _link = section.settings.link -%}
            <div class="sb-widget">
              <div class="sb-banner">
                <a href="{{ _link }}">
                  {%- render 'image-style' image: _image, padding_top: image_padding -%}
                </a>
              </div>
            </div>
          {%- endunless -%}
        </div>

        <div class="block-slider-component">
          {%- if section_heading != blank -%}
            {%- capture heading_css -%}
              {%- render 'snippet-heading' type: 'render-css' config: heading_style_block.settings, classID: sectionID -%}
            {%- endcapture -%}
            <div class="section-header">
              {{section_heading}}
            </div>
          {%- endif -%}
          <slider-component>
            <div class="slider-container js-slider-container">
              <div class="slider-wrapper">
                <div class="slider-list row" id="slider-{{section.id}}">
                  {%- for product in collection.products limit: limit -%}
                    <div class="slider-item {{ gridClass }}">
                      {%- render 'product-item' product: product, collection: collection-%}
                    </div>
                  {%- endfor -%}
                </div>
              </div>
            </div>
          </slider-component>
        </div> 

      </div>

    </div>
  </div>
</div>

{%- capture section_css -%}
  {{-heading_css-}}
  {%- render 'snippet-theme' type: 'section-style', preClassID: sectionID, classID: bg_class, config: section.settings -%}
{%- endcapture -%}
{%- style -%}
@media (min-width: 992px) {
  .section-featured-collection-left-column .left-column-container {
      flex: 0 0 22%;
      max-width: 22%;
      -webkit-padding-end: 10px;
      padding-inline-end: 10px;
  }
  .section-featured-collection-left-column .block-slider-component {
      flex: 0 0 78%;
      max-width: 78%;
      -webkit-padding-start: 20px;
      padding-inline-start: 20px;
  }
}
{{section_css | strip | strip_newlines | remove: '  ' }}
{%- endstyle -%}
{%- schema -%}
{
  "name": "t:sections.featured-collection-with-left-sidebar.name",
  "tag": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.featured-collection-with-left-sidebar.settings.created_by"
    },
    {
      "type": "header",
      "content": "t:sections.common.general"
    },
    {
      "type": "select",
      "id": "layout",
      "label": "t:sections.common.layout_mode",
      "default": "boxed",
      "options": [
        {
          "value": "boxed",
          "label": "Boxed"
        },
        {
          "value": "full",
          "label": "Wide"
        }
      ]
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "t:sections.common.background_color"
    },
    {
      "type": "text",
      "id": "margin",
      "label": "t:sections.common.section_margin",
      "info": "t:sections.common.order_info",
      "placeholder": "t:sections.common.order_placeholder"
    },
    {
      "type": "text",
      "id": "padding",
      "label": "t:sections.common.section_padding",
      "info": "t:sections.common.order_info",
      "placeholder": "t:sections.common.order_placeholder"
    },
    {
      "type": "header",
      "content": "t:sections.common.block_product"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "t:sections.common.heading",
      "default": "Featured products"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "t:sections.common.collection"
    },
    {
      "type": "text",
      "id": "items_resp",
      "label": "t:sections.common.items_per_row",
      "default": "6,5,3,2"
    },
    {
      "type": "checkbox",
      "id": "items_spacing",
      "label": "t:sections.common.items_spacing",
      "default": true
    },
    {
      "type": "range",
      "id": "limit",
      "label": "t:sections.common.limit",
      "step": 1,
      "min": 1,
      "max": 20,
      "default": 10
    },
    {
      "type": "header",
      "content": "t:sections.common.left_sidebar"
    },
    {
      "type": "text",
      "id": "left_sidebar_heading",
      "label": "t:sections.common.heading"
    },
    {
      "type": "link_list",
      "id": "menu_item",
      "label": "t:sections.common.menu_item"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.common.image"
    },
    {
      "type": "url",
      "id": "link",
      "label": "t:sections.common.link"
    }
  ],
  "blocks": [
    {
      "type": "heading-style",
      "limit": 1,
      "name": "t:sections.common.heading_style",
      "settings": [
        {
          "type": "select",
          "id": "section_heading_container_align",
          "label": "t:sections.common.alignment",
          "options": [
            {
              "value": "auto",
              "label": "t:sections.common.auto"
            },
            {
              "value": "left",
              "label": "t:sections.common.left"
            },
            {
              "value": "center",
              "label": "t:sections.common.center"
            },
            {
              "value": "right",
              "label": "t:sections.common.right"
            }
          ]
        },
        {
          "type": "text",
          "id": "section_heading_margin",
          "label": "t:sections.common.margin",
          "info": "t:sections.common.order_info",
          "placeholder": "t:sections.common.order_placeholder"
        },
        {
          "type": "color",
          "id": "section_heading_color",
          "label": "t:sections.common.text_color"
        },
        {
          "type": "text",
          "id": "section_heading_font_size",
          "label": "t:sections.common.font_size",
          "info": "t:sections.common.unit_px"
        },
        {
          "type": "range",
          "id": "section_heading_font_weight",
          "label": "t:sections.common.font_weight",
          "step": 100,
          "min": 100,
          "max": 900,
          "default": 600
        },
        {
          "type": "text",
          "id": "section_heading_line_height",
          "label": "t:sections.common.line_height",
          "info": "t:sections.common.unit_px"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.featured-collection-with-left-sidebar.name"
    }
  ]
}
{%- endschema -%}