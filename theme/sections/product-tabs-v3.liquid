<link rel="stylesheet" href="{{'section-product-tab-v3.css' | asset_url}}" media="print" onload="this.media='all'">

{%- liquid
  assign bg_class = ''
  assign limit = section.settings.limit
  assign enable_slider =section.settings.enable_slider
  assign dots  = section.settings.dots
  assign loop  = section.settings.loop
  assign controls = section.settings.controls
  assign autoplay = section.settings.autoplay
  assign style = section.settings.style
  assign _collection = section.blocks | where: 'type' , 'product' | first 
  assign collection = collections[_collection.settings.collection]
  assign sectionID  = '#section-' | append: section.id
  assign items_resp = section.settings.items_resp
  assign controls_id = '#controls-' | append: section.id
  assign items_spacing = section.settings.items_spacing
  assign autoplay_timeout = section.settings.autoplay_timeout
  assign heading_style_block = section.blocks | where: 'type' , 'heading-style' | first
  assign slider_id = '#slider-' | append: section.id
  assign alignment_tab_title = section.settings.alignment_tab_title
  assign tab_title_style = section.settings.tab_title_style

  assign layout = section.settings.layout
  if layout == 'boxed'
    assign layout_class = 'container'
  else
    assign layout_class = 'container-fluid'
  endif

  if items_spacing
    assign items_spacing_slider = '30px'
  else
    assign items_spacing_slider = '0'
  endif

  if items_spacing == false and enable_slider == false
    assign items_spacing_row = 'no-padding'
  endif
-%}

{%- capture section_heading -%}
  {%- render 'snippet-heading' type:'render-html' config: section.settings -%}
{%- endcapture -%}

{%- capture gridClass -%}{%- render 'set-item-per-row', value: items_resp -%}{%- endcapture -%}

<div class="section-product-tab-v3" id="section-{{section.id}}" data-section-id="{{section.id}}"{% if enable_slider %} data-section-type="featured-collection"{% endif %}>
  <div class="{{ layout_class }}">
    <div class="section-wrapper {{items_spacing_row}}">

      {%- if section_heading != blank -%}
        {%- capture heading_css -%}
          {%- render 'snippet-heading' type: 'render-css' config: heading_style_block.settings, classID: sectionID -%}
        {%- endcapture -%}
        <div class="section-header">{{section_heading}}</div>
      {%- endif -%}

      <div class="section-body">
        <ul class="tab-heading tab-heading-{{ tab_title_style }} align-{{ alignment_tab_title }}">
          {%- assign i = 0 -%}
          {%- for block in section.blocks -%} 
            {%- if block.type == 'product' -%}
              {%- liquid
                assign heading = block.settings.heading
                assign _collection = block.settings.collection
                assign collection = collections[_collection]
              -%}

              {%- if _collection != blank -%}
                {%- assign i = i | plus: 1 -%}
                <li>
                  <a href="{{ collection.url }}"{% if i == 1 %} class="active"{% endif %}>{%- if heading != blank -%}{{ heading }}{%- else -%}{{ collection.title }}{%- endif -%}</a>
                </li>
              {%- endif -%}

            {%- endif -%}
          {%- endfor -%}
        </ul>

        <slider-component>
          <div class="slider-container js-slider-container">
            <div class="slider-wrapper">

              {%- for block in section.blocks -%}
                {%- if block.type == 'product' -%}
                  {%- liquid
                    assign _collection = block.settings.collection
                    assign collection = collections[_collection]
                  -%}

                  {%- if _collection != blank -%}
                    <div class="slider-list{% unless enable_slider %} row{% endunless %}" id="slider-{{section.id}}">
                      {%- for product in collection.products limit: limit -%}
                          {%- if enable_slider and style == '2' -%}
                            <div class="slider-item">
                              {% capture _mod %}{{ forloop.index | modulo: 2 }}{% endcapture %}
                              {% if _mod == '1' %}<div class="product-grid-item">{% endif %}
                              {%- render 'product-owl-item' product: product, collection: collection-%}
                              {% if _mod == '0' or forloop.last %}</div>{% endif %}
                            </div>

                          {%- else -%}
                            <div class="slider-item{% unless enable_slider %} {{ gridClass }}{% endunless %}">
                              {%- render 'product-owl-item' product: product, collection: collection-%}
                            </div>
                          {%- endif -%} 
                      {%- endfor -%}
                    </div>
                  {%- break -%}
                  {%- endif -%}

                {%- endif -%}
              {%- endfor -%}

              {%- if enable_slider -%}
                {%- render 'set-tns-config'
                  loop: loop,
                  dots: dots,
                  padding: items_spacing_slider,
                  classID: sectionID,
                  controls: controls,
                  autoplay: autoplay,
                  slider_id  : slider_id,
                  total_item : limit,
                  items_resp : items_resp,
                  controls_id: controls_id,
                  customControls  : true,
                  autoplay_timeout: autoplay_timeout,
                -%}
              {%- endif -%}
            </div>
          </div>
        </slider-component>
      </div>
    </div>
  </div>
</div>

{%- if enable_slider -%}
<script>
  window.theme = window.theme || {};
  if(!!window.theme.sectionRegister){
    !window.theme.sectionRegister.includes("featured-collection") && (window.theme.sectionRegister = [...window.theme.sectionRegister, "featured-collection"]);
  }else{
    window.theme.sectionRegister = ["featured-collection"];
  }
</script>

<script>
  window.theme = window.theme || {};
  if(!!window.theme.customElementsList){
    !window.theme.customElementsList.includes("slider-component") && (window.theme.customElementsList = [...window.theme.customElementsList, "slider-component"]);
  }else{
    window.theme.customElementsList = ["slider-component"];
  }
</script>
{%- endif -%}
{%- capture section_css -%}
  {{-heading_css-}}
  {%- render 'snippet-theme' type: 'section-style', preClassID: sectionID, classID: bg_class, config: section.settings -%}
{%- endcapture -%}
{%- style -%}{{section_css | strip | strip_newlines | remove: '  ' }}{%- endstyle -%}
{%- schema -%}
{
  "name": "t:sections.product-tabs-v3.name",
  "tag": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.product-tabs-v3.settings.created_by"
    },
    {
      "type": "header",
      "content": "t:sections.common.general"
    },
    {
      "type": "select",
      "id": "layout",
      "label": "t:sections.common.layout_mode",
      "default": "boxed",
      "options": [
        {
          "value": "boxed",
          "label": "Boxed"
        },
        {
          "value": "full",
          "label": "Wide"
        }
      ]
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "t:sections.common.background_color"
    },
    {
      "type": "text",
      "id": "margin",
      "label": "t:sections.common.section_margin",
      "info": "t:sections.common.order_info",
      "placeholder": "t:sections.common.order_placeholder"
    },
    {
      "type": "text",
      "id": "padding",
      "label": "t:sections.common.section_padding",
      "info": "t:sections.common.order_info",
      "placeholder": "t:sections.common.order_placeholder"
    },
    {
      "type": "header",
      "content": "t:sections.common.layout_settings"
    },
    {
      "type": "text",
      "id": "items_resp",
      "label": "t:sections.common.items_per_row",
      "default": "6,5,3,2"
    },
    {
      "type": "checkbox",
      "id": "items_spacing",
      "label": "t:sections.common.items_spacing",
      "default": false
    },
    {
      "type": "range",
      "id": "limit",
      "label": "t:sections.common.limit",
      "step": 1,
      "min": 1,
      "max": 20,
      "default": 10
    }, 
    {
      "type": "header",
      "content": "t:sections.common.heading_settings"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "t:sections.common.heading",
      "default": "Featured products"
    },
    {
      "type": "header",
      "content": "t:sections.common.tab_heading"
    },
    {
      "type": "select",
      "id": "alignment_tab_title",
      "label": "t:sections.common.alignment",
      "options": [
        { "value": "left", "label": "t:sections.common.left" },
        { "value": "center", "label": "t:sections.common.center" },
        { "value": "right", "label": "t:sections.common.right" }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "tab_title_style",
      "label": "Border style",
      "options": [
        { "value": "1", "label": "Style 01" },
        { "value": "2", "label": "Style 02" },
        { "value": "3", "label": "Style 03" }
      ],
      "default": "1"
    },
    {
      "type": "header",
      "content": "t:sections.common.slider_settings"
    },
    {
      "type": "checkbox",
      "id": "enable_slider",
      "label": "t:sections.common.enable_slider",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "loop",
      "label": "t:sections.common.loop",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "controls",
      "label": "t:sections.common.controls",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "dots",
      "label": "t:sections.common.dots",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "t:sections.common.autoplay",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_timeout",
      "label": "t:sections.common.autoplay_timeout",
      "step": 0.1,
      "min": 2,
      "max": 10,
      "unit": "s",
      "default": 4
    },
    {
      "type": "select",
      "id": "style",
      "label": "t:sections.common.style",
      "default": "1",
      "options": [
        {
          "value": "1",
          "label": "1 row"
        },
        {
          "value": "2",
          "label": "2 rows"
        }
      ]
    } 
  ],
  "blocks": [
    {
      "type": "heading-style",
      "limit": 1,
      "name": "t:sections.common.heading_style",
      "settings": [
        {
          "type": "select",
          "id": "section_heading_container_align",
          "label": "t:sections.common.alignment",
          "options": [
            {
              "value": "auto",
              "label": "t:sections.common.auto"
            },
            {
              "value": "left",
              "label": "t:sections.common.left"
            },
            {
              "value": "center",
              "label": "t:sections.common.center"
            },
            {
              "value": "right",
              "label": "t:sections.common.right"
            }
          ]
        },
        {
          "type": "text",
          "id": "section_heading_margin",
          "label": "t:sections.common.margin",
          "info": "t:sections.common.order_info",
          "placeholder": "t:sections.common.order_placeholder"
        },
        {
          "type": "color",
          "id": "section_heading_color",
          "label": "t:sections.common.text_color"
        },
        {
          "type": "text",
          "id": "section_heading_font_size",
          "label": "t:sections.common.font_size",
          "info": "t:sections.common.unit_px"
        },
        {
          "type": "range",
          "id": "section_heading_font_weight",
          "label": "t:sections.common.font_weight",
          "step": 100,
          "min": 100,
          "max": 900,
          "default": 600
        },
        {
          "type": "text",
          "id": "section_heading_line_height",
          "label": "t:sections.common.line_height",
          "info": "t:sections.common.unit_px"
        }
      ]
    },
    {
      "type": "product",
      "name": "t:sections.common.block_item",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "t:sections.common.heading"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "t:sections.common.collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.product-tabs-v3.name"
    }
  ]
}
{%- endschema -%}